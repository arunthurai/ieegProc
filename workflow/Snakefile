from os import listdir,makedirs,walk,sep
from os.path import join,isdir,dirname,split,abspath,exists,basename
import pandas as pd
from glob import glob
from shutil import copyfile
from snakemake.utils import validate
import pandas as pd 
import numpy as np

configfile: 'config/config.yml'
validate(config, "schemas/config.schema.yml")

subject_id = '{subject}'

config['out_dir'] = config['bids_dir']
config['participants_tsv'] = join(config['bids_dir'], 'participants_run.tsv')

if exists(config['participants_tsv']):
    df = pd.read_table(config['participants_tsv'], dtype = str, header=0)
    subjects=df.participant_id.to_list()
    if isinstance(subjects[0],str):
        subjects = [ s.split('-')[-1] for s in subjects]
    else:
        subjects = [ str(s).zfill(3) for s in subjects]
else:
    subjects = [x.split('-')[-1] for x in listdir(join(config['bids_dir'],'bids')) if isdir(join(config['bids_dir'], 'bids',x)) and x.startswith('sub')]

#this include is for the bids() function, and 
#and any other global function declarations
include: 'rules/common.smk'

final_outputs = []

if config['registration']['run']:
    include: "rules/registration.smk"

if config['segmentation']['run']:
    include: "rules/segmentation.smk"

if config['fmriprep']['run']:
    include: 'rules/fmriprep.smk'
    if not exists(join(config['out_dir'], 'derivatives', 'fmriprep')):
       makedirs(join(config['out_dir'], 'derivatives', 'fmriprep'))

if config['hippunfold']['run']:
    include: 'rules/hippunfold.smk'

if config['seeg_contacts']['present']:
    include: 'rules/electrodes.smk'

if config['fastsurfer']['run']:
    include: 'rules/fastsurfer.smk'

if config['visqc']['run']:
    include: "rules/visqc.smk"

rule all:
        input:
            final_outputs
